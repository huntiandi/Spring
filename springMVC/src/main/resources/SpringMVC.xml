<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--开启扫描
    component-scan开启扫描
    base-package 扫描目录
    -->
    <context:component-scan base-package="com.yang"></context:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
    <property name="order" value="1"/>
    <property name="characterEncoding" value="UTF-8"/>
    <property name="templateEngine">
        <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
            <property name="templateResolver">
                <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                    <!-- 视图前缀 用来解析文件-->
                    <property name="prefix" value="/WEB-INF/templates/"/>
                    <!-- 视图后缀 -->
                    <property name="suffix" value=".html"/>
                    <property name="templateMode" value="HTML5"/>
                    <property name="characterEncoding" value="UTF-8" />
                </bean>
            </property>
        </bean>
    </property>
    </bean>
    <!--视图控制器，当视图只配置一个跳转页面的时候可以用 path路径，view-name映射路径-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <mvc:view-controller path="/rest" view-name="rest"/>
    <mvc:view-controller path="/file" view-name="file"/>
    <mvc:view-controller path="/httpTest" view-name="httpTest"/>
    <!--开启mvc注解驱动
    如果不加这个驱动所有的都会交给默认的请求去处理了，只能访问静态资源，而其他跳转功能等无法使用
    所以default-servlet-handler标签要和annotation-driven一起使用
    -->
    <mvc:annotation-driven/>
    <!--开启对静态资源的访问
    由于设置了DispatcherServlet所以所有的请求都会交给DispatcherServlet去处理，而当它处理不了的时候，就需要交给默认的servlet处理
    web阶段是由于Tomcat中设置为默认servlet，而mvc中设置为DispatcherServlet，起冲突时，就地原则，就使用DispatcherServlet，所以需要
    在开启该标签，当DispatcherServlet处理不了时，交给默认的去处理，若也处理不了就404了
    -->
    <mvc:default-servlet-handler/>
    <!--文件上传解析类-->
<!--    <bean id= "multipartFile" class="org.springframework.web.multipart.commons.CommonsMultipartFile"></bean>-->
</beans>